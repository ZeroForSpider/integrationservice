<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!--定义了提供方应用信息，用于计算依赖关系；在 dubbo-admin 或 dubbo-monitor 会显示这个名字，方便辨识-->
    <dubbo:application name="dubbo-provider" owner="lht" organization="cmiot"/>
    <!--使用 zookeeper 注册中心暴露服务，注意要先开启 zookeeper-->
    <dubbo:registry address="zookeeper://119.29.193.187:2181"/>
    <!--dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880"/>
    <!--使用 dubbo 协议实现定义好的 Service Api 接口-->
    <dubbo:service interface="com.iot.iservice.service.IKafkaConfiguration" ref="kafkaConfiguration" protocol="dubbo"/>
    <!--具体实现该接口的 bean-->
    <bean id="kafkaConfiguration" class="com.iot.serviceprovider.serviceImpl.IKafkaConfigurationImpl"/>

    <!--配置消费者服务接口-->
    <dubbo:service interface="com.iot.iservice.service.ICustomerDeviceStatus" ref="customerDeviceStatus" protocol="dubbo"/>

    <bean id="customerDeviceStatus" class="com.iot.serviceprovider.serviceImpl.ICustomerDeviceStatusImpl"/>
</beans>